shiny::runApp()
library(shiny)
library(data.table)
fakeNewsData <- fread("../data/fake.csv") %>%
select(-uuid, -ord_in_thread, -crawled, -domain_rank, -spam_score, -main_img_url,
-replies_count, -participants_count, -likes, -comments, -shares, -thread_title, -published)
# Define server logic required to draw a histogram
shinyServer(function(input, output) {
# TODO: reactively filter the data table based on input data
output$table <- renderDataTable(fakeNewsData)
})
library(shiny)
fakeNewsData <- fread("../data/fake.csv")
shinyUI(fluidPage(
# Application title
titlePanel("Article Finder"),
fluidRow(
# Insert selectInput menus
column(3,
selectInput("language",
"Language",
c("All",
unique(as.character(fakeNewsData$language))))
),
column(3,
selectInput("author",
"Author",
c("All",
unique(as.character(fakeNewsData$author))))
),
column(3,
selectInput("country",
"Country",
c("All",
unique(as.character(fakeNewsData$country))))
)
),
fluidRow(
dataTableOutput("table")
)
)
)
runApp()
library(dplyr)
runApp()
runApp()
