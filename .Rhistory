url <- paste0(base_url, "stats/time_series_years.json")
response <- GET(url)
body <- content(response, "text")
date <- fromJSON(body)
date <- fromJSON(body)
data <- fromJSON(body)
data <- fromJSON(body)
years
print(years)
### Exercise 1 ###
# Load the httr and jsonlite libraries for accessing data
# install.packages("jsonlite")
# install.packages("httr")
library("jsonlite")
library("httr")
## For these questions, look at the API documentation to identify the appropriate endpoint and information.
## Then send GET() request to fetch the data, then extract the answer to the question
base_url <- "http://data.unhcr.org/api/"
# For what years does the API have statistical data?
url <- paste0(base_url, "stats/time_series_years.json")
response <- GET(url)
body <- content(response, "text")
years <- fromJSON(body)
print(years)
### Exercise 1 ###
# Load the httr and jsonlite libraries for accessing data
# install.packages("jsonlite")
# install.packages("httr")
library("jsonlite")
library("httr")
## For these questions, look at the API documentation to identify the appropriate endpoint and information.
## Then send GET() request to fetch the data, then extract the answer to the question
base_url <- "http://data.unhcr.org/api/"
# For what years does the API have statistical data?
url <- paste0(base_url, "stats/time_series_years")
response <- GET(url)
body <- content(response, "text")
years <- fromJSON(body)
print(years)
### Exercise 1 ###
# Load the httr and jsonlite libraries for accessing data
# install.packages("jsonlite")
# install.packages("httr")
library("jsonlite")
library("httr")
## For these questions, look at the API documentation to identify the appropriate endpoint and information.
## Then send GET() request to fetch the data, then extract the answer to the question
# base_url <- "http://data.unhcr.org/api/"
# For what years does the API have statistical data?
# url <- paste0(base_url, "stats/time_series_years")
response <- GET("http://data.unhcr.org/api/stats/time_series_years.json")
body <- content(response, "text")
years <- fromJSON(body)
print(years)
library("jsonlite")
library("jsonlite")
library("httr")
## For these questions, look at the API documentation to identify the appropriate endpoint and information.
## Then send GET() request to fetch the data, then extract the answer to the question
# base_url <- "http://data.unhcr.org/api/"
# For what years does the API have statistical data?
# url <- paste0(base_url, "stats/time_series_years")
response <- GET("http://data.unhcr.org/api/stats/time_series_years.json")
body <- content(response, "text")
years <- fromJSON(body)
years
### Exercise 1 ###
# Load the httr and jsonlite libraries for accessing data
# install.packages("jsonlite")
# install.packages("httr")
library("jsonlite")
library("httr")
## For these questions, look at the API documentation to identify the appropriate endpoint and information.
## Then send GET() request to fetch the data, then extract the answer to the question
# base_url <- "http://data.unhcr.org/api/"
# For what years does the API have statistical data?
# url <- paste0(base_url, "stats/time_series_years")
response <- GET("http://data.unhcr.org/api/stats/time_series_years.json")
body <- content(response,"text")
years <- fromJSON(body)
years
response <- GET("http://data.unhcr.org/api/stats/time_series_years.json")
body <- content(response,"text")
years <- fromJSON(body)
years <- fromJSON(body)
body <- content(response,"text")
body
print(body)
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/scripts/chart2.R')
createChart(read.csv("Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/data/UFOCoords.csv"))
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/scripts/chart2.R')
createChart(read.csv("Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/data/UFOCoords.csv"))
createChart(read.csv("Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/data/UFOCoords.csv"))
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/scripts/chart2.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/scripts/chart2.R')
createChart(read.csv("Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/data/UFOCoords.csv"))
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/scripts/chart2.R')
createChart(read.csv("Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 7/a7-git-collaboration-salad/data/UFOCoords.csv"))
getwd()
setwd("Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/")
x <- read.csv("data/fake.csv", stringsAsFactors = FALSE)
View(x)
x <- data.frame(x)
authors <- x[3]
View(authors)
unique_authors <- unique(authors)
View(unique_authors)
func1 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
vr[i] <- vector[i]+i
}
vr
}
func1(c(2,3,4,5,6,7,8))
func1 <- function(vector) {
+     vr <- c() ### an empty vector
+
+     for (i in 1:length(vector)) {
+         vr[i] <- vector[i]
+     }
+     vr
+ }
func1 <- function(vector) {
+     vr <- c() ### an empty vector
+
+     for (i in 1:length(vector)) {
+         vr[i] <- vector[i]
+     }
+     vr
+ }
func1 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
vr[i] <- vector[i]
}
vr
}
func1(c(1,2,3,5,6,7))
"hello" + "hello"
cat("hello", "hello")
cat("hello","hello")
source('~/.active-rstudio-document')
build_vector(authors)
source('~/.active-rstudio-document')
build_vector(authors)
cat(authors)
typeof(authors)
test <- as.vector(authors)
typeof(test)
test <- unlist(authors, use.names = FALSE)
typeof(test)
source('~/.active-rstudio-document')
build_vector(authors)
source('~/.active-rstudio-document')
build_vector(authors)
[1]
test <- build_vector(authors)
test
test[1]
source('~/.active-rstudio-document')
test <- build_vector(authors)
test[1]
typeof(test)
source('~/.active-rstudio-document')
test <- build_vector1(uniquie_authors)
test <- build_vector1(unique_authors)
test2 <- build_vector2(unique_authors)
source('~/.active-rstudio-document')
test2 <- build_vector2(unique_authors)
typeof(test2)
source('~/.active-rstudio-document')
typeof(test2)
test2 <- build_vector2(unique_authors)
source('~/.active-rstudio-document')
test2 <- build_vector2(unique_authors)
source('~/.active-rstudio-document')
test2 <- build_vector2(unique_authors)
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
View(plot)
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
identifier <- function(vector) {
major <- c()
for(i in 1:length(vector)) {
if(vector[i] > 50) {
major[i] <- i
}
}
major
}
ID <- identifier(val)
identifier <- function(vector) {
major <- c()
j = 1
for(i in 1:length(vector)) {
if(vector[i] > 50) {
major[j] <- i
j = j + 1
}
}
major
}
ID <- identifier(val)
identifier <- function(vector) {
major <- c()
j = 1
for(i in 1:length(vector)) {
if(vector[i] > 200) {
major[j] <- i
j = j + 1
}
}
major
}
ID <- identifier(val)
identifier <- function(vector) {
major <- c()
j = 1
for(i in 1:length(vector)) {
if(vector[i] > 20) {
major[j] <- i
j = j + 1
}
}
major
}
ID <- identifier(val)
identifier <- function(vector) {
major <- c()
j = 1
for(i in 1:length(vector)) {
if(vector[i] > 100) {
major[j] <- i
j = j + 1
}
}
major
}
ID <- identifier(val)
ID
typeof(ID)
typeof(val)
val
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
val[2]
val[1]
val
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
val[1]
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
identifier <- function(vector1) {
major <- c()
j = 1
for(i in 1:length(vector1)) {
if(vector1[i] > 50) {
major[j] <- i
j = j + 1
}
}
major
}
ID <- identifier(val)
extract_major_author <- function(vector) {
author <- c()
for(i in 1:length(vector)) {
if(unique_authors[i] != "") {
author[i] <- unique_authors[i]
} else {
author[i] <- "unknown"
}
}
author
}
major_author <- extract_major_author(ID)
extract_major_author <- function(vector) {
author <- c()
for(i in 1:length(vector)) {
if(unique_authors[vector[i]] != "") {
author[i] <- unique_authors[vector[i]]
} else {
author[i] <- "unknown"
}
}
author
}
major_author <- extract_major_author(ID)
major_author <- extract_major_author(ID)
extract_count_for_author <- function(vector) {
count <- c()
for(i in 1:length(vector)) {
count[i] <- val[vector[i]]
}
count
}
number_of_news <- extract_count_for_author(ID)
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Assignment 5/a5-report-saksham-aggarwal/Untitled.R')
plot
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = dataLabels) + coord_flip()
return(graph)
}
plot <- generate_graph(major_author, number_of_news)
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values, fill = dataLabels)) +
geom_bar(stat = "identity", width = 0.5) + coord_flip()
return(graph)
}
plot <- generate_graph(major_author, number_of_news)
plot
number_of_news <- extract_count_for_author(ID)
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "blue") + coord_flip()
return(graph)
}
plot <- generate_graph(major_author, number_of_news)
plot
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") + coord_flip()
return(graph)
}
plot <- generate_graph(major_author, number_of_news)
plot
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw()
return(graph)
}
plot <- generate_graph(major_author, number_of_news)
plot
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw() +
geom_text(aes(label = len), vjust=1.6, color="white", size=3.5)
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
ggsave(filename = "Static Analysis 3/author_num.jpg", plot = plot_graph, width = 8, height = 8)
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw() +
geom_text(aes(label = Values), vjust=1.6, color="white", size=3.5)
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
plot
# Generates the graph for the analysis
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw() +
geom_text(aes(label = Values), vjust=1.6, color="white", size=3.5) + theme_minimal()
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
plot
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw()
#geom_text(aes(label = Values), vjust=1.6, color="white", size=3.5) + theme_minimal()
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
plot
# Generates the graph for the analysis
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw()
#geom_text(aes(label = Values), vjust=1.6, color="white", size=3.5) + theme_minimal()
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
ggsave(filename = "Static Analysis 3/author_num.jpg", plot = plot_graph, width = 8, height = 8)
x <- "saksham.aggarwal"
contains("aggarwal", x)
contains("aggarwal")
x.contains("aggarwal")
grep("(noreply@blogger.com)", major_author, replacement = "")
gsub("(noreply@blogger.com)", major_author, replacement = "")
gsub("()", major_author, replacement = "")
gsub("(noreply@blogger.com)", major_author, replacement = "")
gsub("()", major_author, replacement = "")
gsub("(noreply@blogger.com)", major_author, replacement = "")
major_author <- gsub("(noreply@blogger.com)", major_author, replacement = "")
gsub("()", major_author, replacement = "")
extract_major_author <- function(vector) {
author <- c()
for(i in 1:length(vector)) {
if(unique_authors[vector[i]] != "") {
author[i] <- str_to_title(unique_authors[vector[i]])
} else {
author[i] <- "unknown"
}
}
author
}
major_author <- extract_major_author(ID)
major_author <- gsub("(noreply@blogger.com)", major_author, replacement = "")
gsub("()", major_author, replacement = "")
#major_author[9] <- grep("(noreply@blogger.com)", major_author[9]
# Extract the number of news articles written by authors
extract_count_for_author <- function(vector) {
count <- c()
for(i in 1:length(vector)) {
count[i] <- val[vector[i]]
}
count
}
major_author <- gsub("(noreply@blogger.com)", major_author, replacement = "")
gsub("()", major_author, replacement = "")
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
number_of_news <- extract_count_for_author(ID)
# Generates the graph for the analysis
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw() +
geom_text(aes(label = Values), vjust=-0.3, size=2.0) + theme_minimal()
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
plot
number_of_news <- extract_count_for_author(ID)
# Generates the graph for the analysis
generate_graph <- function(lbls, values) {
df <- data.frame(dataLabels = lbls,
Values = values)
graph <- ggplot(data = df, aes(x = dataLabels, y = Values)) +
geom_bar(stat = "identity", width = 0.5, fill = "darkviolet") +
coord_flip() + theme_bw() +
geom_text(aes(label = Values), vjust=-0.3, size=3.5) + theme_minimal()
return(graph)
}
# Plotting and saving the graph
plot_graph <- generate_graph(major_author, number_of_news)
plot
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
plot_pie
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
plot_pie
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
plot_pie
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
plot_pie
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 1/country_fake_news.R')
plot_pie
source('~/Desktop/CourseWork/Sophomore Year/Autumn 2017/INFO201/Final Project/final_project_info201/Static Analysis 3/author_news_num.R')
